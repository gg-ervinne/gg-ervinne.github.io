{"version":3,"sources":["App/Client/Features/Worklogs/Errors/HoursAndMinutesRenderingFailedError.js","App/Client/Features/Worklogs/HoursAndMinutes.jsx","App/Client/Features/Calendar/CalendarLinkItem/CalendarLinkItemComponent.jsx","App/Client/Features/Worklogs/StatusHeader/StatusHeaderComponent.jsx","App/Client/Features/Worklogs/ProjectTaskSelector.jsx","App/Client/Features/Controls/AdjustableNumericInput/AdjustableNumericInput.jsx","App/Client/Features/Worklogs/ProjectLogTable/ProjectLogTableComponent.jsx","App/Client/Mocks/projectsAndTasks.js","App/Client/Mocks/worklogs.js","App/Client/Features/UILibrary/UILibraryComponents.jsx","App/Client/Features/UILibrary/UILibraryCompositeComponents.jsx","App/Client/Routes/UILibraryRoutes.jsx","App/Client/Features/Calendar/VerticalDateNavigator/VerticalDateNavigatorComponent.jsx","App/Client/Features/Worklogs/WorklogForm/WorklogFormComponent.jsx","App/Client/Features/Worklogs/EmployeeWorklogScene/DailyWorklogsTableSet.jsx","App/Client/Mocks/worklogsMultiProject.js","App/Client/Features/Worklogs/EmployeeWorklogScene/EmployeeWorklogScene.jsx","App/Client/Routes/WorklogRoutes.jsx","App/Client/Routes/index.js","App/Client/App.jsx","App/Client/serviceWorker.js","index.js"],"names":["HoursAndMinutesRenderingFailedError","code","message","this","name","httpCode","validateMinutes","minutes","HoursAndMinutes","_ref","hours","Math","floor","remMins","round","hoursLabel","hoursDisplay","concat","minsLabel","minsDisplay","react_default","a","createElement","react","DayOfWeek","_ref2","date","className","dist_default","format","TimeLogged","_ref3","loggedMins","timeLoggedDisplay","Worklogs_HoursAndMinutes","DayOfMonth","_ref4","dateOfMonth","getDate","displayText","getOrdinal","number","CalendarLinkItemComponent","dateObj","Date","dateString","moment","react_router_dom","to","CalendarLinkItemComponent_DayOfWeek","CalendarLinkItemComponent_TimeLogged","CalendarLinkItemComponent_DayOfMonth","TotalTimeLogged","StatusHeaderComponent","_ref$loggedMins","StatusHeaderComponent_TotalTimeLogged","ProjectTaskSelector","state","options","projects","tasks","loadProjectsToOptions","Object","objectSpread","_this","map","project","value","id","label","setState","loadProjectTasksToOptions","task","onProjectSelected","projectOption","selectedProject","onTaskSelected","taskOption","selectedTask","props","react_select_esm","isSearchable","onChange","React","Component","AdjustableNumericInput","setDefaultNameIfUnset","setDefaultMaxValue","isMaxValueSet","maxValue","handleDecrease","currentValue","handleIncrease","handleBlur","handleInputChange","bind","e","target","valueIsNumeric","test","valueIsExceedingMax","onClick","type","onBlur","Row","log","showsProject","ProjectLogTableComponent_RowActions","RowActions","ProjectLogTableComponent","worklogs","totalLoggedMins","reduce","sum","worklog","index","ProjectLogTableComponent_Row","key","projectsAndTasks","UILibraryComponents","lib","fluid","md","CalendarLinkItem_CalendarLinkItemComponent","StatusHeader_StatusHeaderComponent","Worklogs_ProjectTaskSelector","Controls_AdjustableNumericInput_AdjustableNumericInput","ProjectLogTable_ProjectLogTableComponent","UILibraryCompositeComponents","UILibraryRoutes","react_router","exact","path","component","VerticalDateNavigatorComponent","displayDateSet","initializeDisplayDateSet","today","weekDayDateSetGenerator","toString","referenceDate","weekDayDateSet","counter","setDate","push","WorklogForm","sm","style","marginTop","groupByProject","groupedWorklogs","forEach","DailyWorklogsTableSet","values","worklogsByProject","worklogId","timeFrom","timeTo","EmployeeWorklogScene","match","params","VerticalDateNavigator_VerticalDateNavigatorComponent","EmployeeWorklogScene_LoggerComponent","EmployeeWorklogScene_SelectDatePrompt","SelectDatePrompt","LoggerComponent","WorklogFormComponent","EmployeeWorklogScene_DailyWorklogsTableSet","worklogsMultiProject","WorklogRoutes","Routes","Routes_UILibraryRoutes","Routes_WorklogRoutes","App","Client_Routes","Boolean","window","location","hostname","ReactDOM","render","Client_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c3b4df6.chunk.js","sourcesContent":["\nexport const INVALID_OR_NO_MINUTES_PROVIDED = 1;\n\nfunction HoursAndMinutesRenderingFailedError(code, message) {\n    this.code = code;\n    this.message = message;\n    this.name = 'HoursAndMinutesRenderingFailedError';\n\n    this.httpCode = null;   \n}\n\nexport const createErroFromInvalidMinutesProvided = () => new HoursAndMinutesRenderingFailedError(INVALID_OR_NO_MINUTES_PROVIDED, \"Invalid or no minutes provided.\");\n\nexport default HoursAndMinutesRenderingFailedError;","import React, { Fragment } from 'react';\nimport { createErroFromInvalidMinutesProvided } from 'App/Client/Features/Worklogs/Errors/HoursAndMinutesRenderingFailedError';\n\nconst HoursAndMinutes = ({ minutes }) => {    \n    validateMinutes(minutes);\n\n    const hours = Math.floor(minutes / 60);\n    const remMins = Math.round(minutes - (hours * 60));\n\n    const hoursLabel = hours > 1 ? 'Hours' : 'Hour';\n    const hoursDisplay = `${hours} ${hoursLabel}`;\n    const minsLabel = remMins > 1 ? 'Minutes' : 'Minute';\n    const minsDisplay = remMins ? `${remMins} ${minsLabel}` : ''\n\n    return (\n        <Fragment>\n            { hoursDisplay } { minsDisplay }\n        </Fragment>\n    );\n};\n\nconst validateMinutes = (minutes) => {\n    if (!minutes || minutes <= 0) {\n        throw createErroFromInvalidMinutesProvided();\n    }\n};\n\nexport default HoursAndMinutes;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HoursAndMinutes from 'App/Client/Features/Worklogs/HoursAndMinutes';\nimport Moment from 'react-moment'\nimport moment from 'moment';\nimport './style.css';\n\nconst CalendarLinkItemComponent = ({ loggedMins, date }) => {\n    const dateObj = new Date(date);\n    const dateString = moment(dateObj).format(\"YYYY-MM-DD\");\n\n    return (\n        <Link to={ `/log/${dateString}` }>\n            <div className=\"calendar-link-item\">\n                <div className=\"calendar-link-item-content\">\n                    <DayOfWeek date={ dateObj } />\n                    <TimeLogged loggedMins={ loggedMins } />\n                </div>\n                <DayOfMonth date={ dateObj} />\n            </div>\n        </Link>\n    );\n};\n\nconst DayOfWeek = ({ date }) => {    \n    return (\n        <span className=\"day-of-week\">\n            <Moment format=\"dddd\">{ date }</Moment>\n        </span>\n    );\n};\n\nconst TimeLogged = ({ loggedMins }) => {\n    const timeLoggedDisplay =  \n        loggedMins > 0 ? \n            <HoursAndMinutes minutes={ loggedMins } />\n            :\n            \"No time\";\n    \n    return (\n        <span className=\"time-logged\">{ timeLoggedDisplay } Logged</span>\n    );\n};\n\nconst DayOfMonth = ({ date }) => {\n    const dateOfMonth = date.getDate();\n    const displayText = `${dateOfMonth}${getOrdinal(dateOfMonth)}`;\n\n    return (\n        <span className=\"day-of-month\">{ displayText }</span>\n    );\n}\n\n/**\n * TODO: Check if this should be moved to domain later\n */\nconst getOrdinal = (number) => {\n    if (number > 3 && number < 21) return 'th'; \n    switch (number % 10) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n    }\n};\n\nexport default CalendarLinkItemComponent;","import React from 'react';\nimport Moment from 'react-moment';\nimport HoursAndMinutes from 'App/Client/Features/Worklogs/HoursAndMinutes';\nimport './style.css';\n\nimport looseDate from 'App/Client/Common/PropTypes/looseDate';\n\nconst StatusHeaderComponent = ({ date, loggedMins = 0 }) => {\n    const dateObj = new Date(date);    \n\n    return (\n        <div className=\"status-header\">\n            <div className=\"date\">\n                <p>\n                    <Moment format=\"DD MMM YYYY\">{ dateObj }</Moment>\n                </p>\n            </div>\n            <div className=\"total-time-logged\">\n                <TotalTimeLogged loggedMins={ loggedMins } />\n            </div>\n        </div>\n    );\n};\n\nconst TotalTimeLogged = ({ loggedMins }) => {\n    if (loggedMins > 0) {\n        return (\n            <p>\n                Total time logged: \n                <span className=\"time\">\n                    <HoursAndMinutes minutes={ loggedMins } />\n                </span>\n            </p>\n        );\n    } else {\n        return (\n            <p>No time logged yet</p>\n        );\n    }\n};\n\nStatusHeaderComponent.propTypes = {\n    date: looseDate\n};\n\nexport default StatusHeaderComponent;","import React, { Fragment } from 'react';\nimport Select from 'react-select';\n\nclass ProjectTaskSelector extends React.Component {\n    state = {\n        options: {\n            projects: [],\n            tasks: []\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.projects) {\n            this.loadProjectsToOptions(this.props.projects)\n        }\n    }\n\n    loadProjectsToOptions = (projects) => {\n        const options = { ...this.state.options };\n        options.projects = projects.map(project => ({ value: project.id, label: project.name, project }));\n\n        this.setState({ options });\n    }\n\n    loadProjectTasksToOptions = (project) => {\n        const options = { ...this.state.options };\n        options.tasks = project.tasks.map(task => ({ value: task.id, label: task.name, task }));\n\n        this.setState({ options });\n    };\n\n    onProjectSelected = (projectOption) => {\n        const project = projectOption.project;\n        this.loadProjectTasksToOptions(project);\n        this.setState({ selectedProject: project });\n    }\n    \n    onTaskSelected = (taskOption) => {\n        const task = taskOption.task;\n        this.setState({ selectedTask: task });        \n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Select \n                    name=\"selectedProject\" \n                    isSearchable={ true }\n                    options={ this.state.options.projects } \n                    onChange={ this.onProjectSelected } />\n\n                <Select \n                    name=\"selectedTask\" \n                    isSearchable={ true }\n                    options={ this.state.options.tasks } />\n            </Fragment>\n        );\n    }\n}\n\nexport default ProjectTaskSelector;","import React from 'react';\nimport './style.css';\n\nclass AdjustableNumericInput extends React.Component {\n    state = {\n        value: 0,\n        label: 'Default'\n    }\n\n    componentWillMount() {\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setDefaultNameIfUnset();\n        this.setDefaultMaxValue();\n    }\n\n    setDefaultNameIfUnset = () =>  {\n        if(this.props.label && this.props.label !==\"\") {\n            this.setState({\n                label: this.props.label,\n            });\n        }\n    }\n\n    setDefaultMaxValue = () =>  {\n        const isMaxValueSet = this.props.maxValue;\n        this.maxValue = isMaxValueSet ?  this.props.maxValue : 99;\n    }\n\n    handleDecrease = () => {\n        let currentValue = this.state.value;\n        if(currentValue <= 0) return;\n        this.setState({ value: --currentValue });\n    }\n\n    handleIncrease = () => {\n        let currentValue = this.state.value;\n        if(currentValue >= this.maxValue) return;\n        this.setState({ value: ++currentValue });\n    }\n\n    handleInputChange(e) {\n        const value = e.target.value;\n        const valueIsNumeric = /^\\d+$/.test(value);\n        const valueIsExceedingMax = value >= this.maxValue;\n        \n        // text instead of number to prevent cursor.\n        // Also prevent to delete all text.\n        if(valueIsNumeric && !valueIsExceedingMax){\n            this.setState({ value });\n        }\n    }\n\n    handleBlur = () => {\n        const value = this.state.value;\n        if(value === ''){\n            this.setState({ value: 0 });\n        }\n    }\n\n\trender(){\t\n        return(\n            <div className={ `adj-numeric-input ${ this.props.className }` }>\n                <div className=\"nameWrap\">\n                    { this.state.label }\n                </div>\n                <div className=\"square\">\n                    <button onClick={ this.handleDecrease }>-</button>\n                </div>\n                <div className=\"square -with-input\">\n                    <input \n                        className=\"iText\"\n                        type=\"text\"\n                        onChange={ this.handleInputChange } \n                        onBlur={ this.handleBlur }\n                        value={ this.state.value }\n                    />\n                </div>\n                <div className=\"square\">\n                    <button onClick={ this.handleIncrease }>+</button>\n                </div>\n            </div>\n        )\n\t}\n}\n\nexport default AdjustableNumericInput;","import React, { Fragment } from 'react';\nimport HoursAndMinutes from 'App/Client/Features/Worklogs/HoursAndMinutes';\nimport './style.css'\n\nconst ProjectLogTableComponent = ({ worklogs }) => {\n\n    const sum = worklogs => worklogs.reduce((sum, worklog) => sum + worklog.loggedMins, 0);\n    const totalLoggedMins = sum(worklogs);\n\n    return (\n        <table className=\"project-log-table\">\n           <tbody>\n                { \n                    worklogs.map((log, index) => \n                        <Row \n                            log={ log } \n                            showsProject={ index === 0 } \n                            key={ log.id } />) \n                }\n            </tbody>\n            <tfoot>\n                <tr>\n                    <td></td>\n                    <td></td>\n                    <td className=\"text-bold\">\n                        <HoursAndMinutes minutes={ totalLoggedMins } />\n                    </td>\n                </tr>\n            </tfoot>\n        </table>\n    );\n}\n\nconst Row = ({ log, showsProject }) => {\n\n    const project = showsProject ? log.project.name : \"\";\n\n    return (\n        <tr>\n            <td>{ project }</td>\n            <td>{ log.task.name }</td>\n            <td><RowActions log={ log } /></td>\n        </tr>\n    );\n};\n\nconst RowActions = ({ log }) => {\n    return (\n        <Fragment>\n            <HoursAndMinutes minutes={ log.loggedMins } />\n            <button className=\"table-row-button\">Edit</button>\n            <button className=\"table-row-button\">X</button>\n        </Fragment>\n    );\n};\n\nexport default ProjectLogTableComponent;","const projectsAndTasks = [\n    {\n        \"id\": \"P-000002\",\n        \"name\": \"Project Juniper\",\n        \"tasks\": [\n            { \"id\": \"PT-000001\", \"name\": \"Emails\" },\n            { \"id\": \"PT-000002\", \"name\": \"Development\" },\n            { \"id\": \"PT-000003\", \"name\": \"Document Creation\" },\n            { \"id\": \"PT-000004\", \"name\": \"Meeting\" }\n        ]\n    },\n    {\n        \"id\": \"P-000001\",\n        \"name\": \"Tech Team Tasks\",\n        \"tasks\": [\n            { \"id\": \"PT-000001\", \"name\": \"Emails\" },\n            { \"id\": \"PT-000003\", \"name\": \"Document Creation\" },\n            { \"id\": \"PT-000004\", \"name\": \"Meeting\" }\n        ]\n    }\n];\n\nexport default projectsAndTasks;","const worklogs = [\n    {\n        id: 1,\n        project: { id: \"P-000002\", name: \"Project Juniper\" },\n        task: { id: \"PT-000002\", name: \"Development\" },\n        loggedMins: 230\n    },\n    {\n        id: 2,\n        project: { id: \"P-000002\", name: \"Project Juniper\" },\n        task: { id: \"PT-000003\", name: \"Document Creation\" },\n        loggedMins: 120\n    }\n];\n\nexport default worklogs;","import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nimport CalendarLinkItem from 'App/Client/Features/Calendar/CalendarLinkItem';\nimport StatusHeader from 'App/Client/Features/Worklogs/StatusHeader';\nimport ProjectTaskSelector from 'App/Client/Features/Worklogs/ProjectTaskSelector';\nimport AdjustableNumericInput from 'App/Client/Features/Controls/AdjustableNumericInput';\nimport ProjectLogTable from 'App/Client/Features/Worklogs/ProjectLogTable';\n\nimport projectsAndTasks from 'App/Client/Mocks/projectsAndTasks';\nimport worklogs from 'App/Client/Mocks/worklogs';\n\nconst UILibraryComponents = () => (\n    <div className=\"app-container\">\n        <h1>Worklogs UI Library</h1>        \n\n        <Grid fluid>\n            <Row>\n                <Col md={ 4 }>\n                    <h3>Big Buttons</h3>\n                    <button className=\"call-to-action -lightgreen shadowed\">Add to Logs</button>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={ 4 }>\n                    <h3>Small Buttons</h3>\n                    <button className=\"table-row-button\">Edit</button>\n\n                    <button className=\"table-row-button\">X</button>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={ 5 }>\n                    <h3>Calendar Link Item</h3>\n\n                    <b>Using Date Object `new Date('2019-05-06')`</b>\n                    <CalendarLinkItem loggedMins={ 72 } date= { new Date('2019-05-06') } />\n\n                    <b>Using Date String '2019-05-20'</b>\n                    <CalendarLinkItem loggedMins={ 72 } date= { '2019-05-20' } />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={ 8 }>\n                    <h3>Worklog Status Header</h3>\n                    <b>Using Date Object `new Date('2019-05-06')`</b>\n                    <StatusHeader date={ new Date('2019-05-06') } loggedMins={ 467 } />\n\n                    <b>Using Date String `2019-05-20`</b>\n                    <StatusHeader date={ '2019-05-20' } loggedMins={ 500 } />\n\n                    <b>Time logged is 0</b>\n                    <StatusHeader date={ '2019-05-21' } loggedMins={ 0 } />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={ 12 }>\n                    <h3>Projects & Tasks, Adjustable Numeric Input</h3>\n                </Col>\n\n                <Col md={ 5 }>\n                    <div className=\"vspaced-children-10\">\n                        <ProjectTaskSelector projects={ projectsAndTasks } />\n                    </div>\n                </Col>\n\n                <Col md={ 3 }>\n                    <div className=\"vspaced-children-10\">\n                        <AdjustableNumericInput />\n                        <AdjustableNumericInput />\n                    </div>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={ 7 }>\n                    <h3>Project Table</h3>\n                    <ProjectLogTable worklogs={ worklogs }/>\n                </Col>\n            </Row>\n        </Grid>\n    </div>\n);\n\nexport default UILibraryComponents;\n","import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst UILibraryCompositeComponents = () => (\n    <div className=\"app-container\">\n        <h1>Worklogs UI Library (Composite Components)</h1>        \n\n    </div>\n);\n\n\nexport default UILibraryCompositeComponents;\n","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport UILibraryComponents from 'App/Client/Features/UILibrary/UILibraryComponents';\nimport UILibraryCompositeComponents from 'App/Client/Features/UILibrary/UILibraryCompositeComponents';\n\nconst UILibraryRoutes = () => (\n    <Fragment>\n        <Route exact path=\"/ui-library/components\" component={ UILibraryComponents } />\n        <Route exact path=\"/ui-library/composites\" component={ UILibraryCompositeComponents } />\n    </Fragment>\n);\n\nexport default UILibraryRoutes;","import React from 'react';\nimport './style.css';\nimport CalendarLinkItem from 'App/Client/Features/Calendar/CalendarLinkItem';\n\nclass VerticalDateNavigatorComponent extends React.Component {\n    state = {\n        displayDateSet: []\n    }\n\n    componentWillMount() {\n        if (!this.props.displayDateSet) {\n            this.initializeDisplayDateSet();\n        }\n    }\n\n    initializeDisplayDateSet() {\n        const today = new Date();\n        const displayDateSet = weekDayDateSetGenerator(today);\n\n        this.setState({ displayDateSet });\n    }\n\n    render() {\n        const { displayDateSet } = this.state;\n\n        return (\n            <ul className=\"vertical-date-navigator\">\n                {displayDateSet && displayDateSet.map(date => (\n                    <li key={ date.toString() } >\n                        <CalendarLinkItem date={ date } />\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nconst weekDayDateSetGenerator = (referenceDate) => {    \n    let weekDayDateSet = [];\n\n    //  -3 = let's start 3 days before today\n    for (let counter = -3; counter <= 3; counter ++) {\n        const date = new Date();\n        date.setDate(referenceDate.getDate() + counter);\n        weekDayDateSet.push(date);\n    }\n\n    return weekDayDateSet;\n};\n\nexport default VerticalDateNavigatorComponent;","\nimport React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport ProjectTaskSelector from 'App/Client/Features/Worklogs/ProjectTaskSelector';\nimport AdjustableNumericInput from 'App/Client/Features/Controls/AdjustableNumericInput';\n\n//  TODO: remove later\nimport projectsAndTasks from 'App/Client/Mocks/projectsAndTasks';\n\nconst WorklogForm = () => (\n    <Grid>\n        <Row>\n            <Col sm={ 12 } md={ 6 } >\n                <div className=\"vspaced-children-10\">\n                    <ProjectTaskSelector projects={ projectsAndTasks } />\n                </div>\n            </Col>\n\n            <Col sm={ 12 } md={ 3 } >\n                <div className=\"vspaced-children-10\" >\n                    <AdjustableNumericInput label=\"Hours\" className=\"float-right\" maxValue={ 23 }/>\n                    <AdjustableNumericInput label=\"Mins\" className=\"float-right\" maxValue={ 59 } />\n                </div>\n            </Col>\n\n            <Col sm={ 12 } md={ 3 } >\n                <div style={{ marginTop: '50px' }}>            \n                    <button className=\"call-to-action -lightgreen shadowed\">Add to Logs</button>\n                </div>\n            </Col> \n        </Row>\n    </Grid>\n);\n\nexport default WorklogForm;","import React from 'react';\nimport ProjectLogTable from 'App/Client/Features/Worklogs/ProjectLogTable';\n\nconst DailyWorklogsTableSet = ({ worklogs }) => {\n    const groupedWorklogs = groupByProject(worklogs);    \n    return Object.values(groupedWorklogs).map((worklogsByProject, worklogId) => \n        <ProjectLogTable worklogs={ worklogsByProject } key={ worklogId } />\n    );\n};\n\nconst groupByProject = (worklogs) => {\n    let groupedWorklogs = [];    \n\n    worklogs.forEach(log => {\n        const id = log.project.id;\n        if (id in groupedWorklogs) {\n            groupedWorklogs[id].push(log);\n        } else {\n            groupedWorklogs[id] = [ log ];\n        }\n    });\n\n    return groupedWorklogs;\n};\n\nexport default DailyWorklogsTableSet;","const worklogs = [\n    {\n        id: 1,\n        project: { id: \"P-000002\", name: \"Project Juniper\" },\n        task: { id: \"PT-000002\", name: \"Development\" },\n        loggedMins: 230,\n        timeFrom: null,\n        timeTo: null\n    },\n    {\n        id: 2,\n        project: { id: \"P-000002\", name: \"Project Juniper\" },\n        task: { id: \"PT-000003\", name: \"Document Creation\" },\n        loggedMins: 120,\n        timeFrom: null,\n        timeTo: null\n    },\n    {\n        id: 3,\n        project: { id: \"P-000001\", name: \"Tech Team Tasks\" },\n        task: { id: \"PT-000004\", name: \"Meeting\" },\n        loggedMins: 180,\n        timeFrom: null,\n        timeTo: null\n    },\n    {\n        id: 4,\n        project: { id: \"P-000001\", name: \"Tech Team Tasks\" },\n        task: { \"id\": \"PT-000003\", \"name\": \"Document Creation\" },\n        loggedMins: 181,\n        timeFrom: null,\n        timeTo: null\n    }\n];\n\nexport default worklogs;","import React, { Fragment } from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport VerticalDateNavigator from 'App/Client/Features/Calendar/VerticalDateNavigator';\nimport StatusHeader from 'App/Client/Features/Worklogs/StatusHeader';\nimport WorklogForm from 'App/Client/Features/Worklogs/WorklogForm';\nimport DailyWorklogsTableSet from './DailyWorklogsTableSet';\n\n\n//  TODO: Remove mocks later\nimport worklogsMultiProject from 'App/Client/Mocks/worklogsMultiProject';\n\nclass EmployeeWorklogScene extends React.Component {\n    render() {\n        const date = this.props.match.params.date;\n        return (\n            <Grid fluid>\n                <Row>\n                    <Col md={ 4 }>\n                        <VerticalDateNavigator />\n                    </Col>\n                    <Col md={ 8 }>                        \n                        { date ? <LoggerComponent date={ date } /> : <SelectDatePrompt /> }\n                    </Col>\n                </Row>\n            </Grid>\n        );\n    }\n}\n\nconst SelectDatePrompt = () => (\n    <h1>Please Select a Date</h1>\n);\n\nconst LoggerComponent = ({ date }) => (\n    <Fragment>\n        <StatusHeader date={ date } loggedMins={ 467 }/>\n        <WorklogForm />\n        <DailyWorklogsTableSet worklogs={ worklogsMultiProject } />\n    </Fragment>\n);\n\nexport default EmployeeWorklogScene;","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport EmployeeWorklogScene from 'App/Client/Features/Worklogs/EmployeeWorklogScene';\n\nconst WorklogRoutes = () => (\n    <Fragment>\n        <Route exact path=\"/\" component={ EmployeeWorklogScene } />\n        <Route exact path=\"/log/:date\" component={ EmployeeWorklogScene } />\n    </Fragment>\n);\n\nexport default WorklogRoutes;","import React from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\n\nimport UILibraryRoutes from './UILibraryRoutes';\nimport WorklogRoutes from './WorklogRoutes';\n\nconst Routes = () => (\n    <BrowserRouter>\n        <Switch>\n            <UILibraryRoutes />\n            <WorklogRoutes />\n        </Switch> \n    </BrowserRouter>\n);\n\nexport default Routes;","import React from 'react';\nimport Routes from 'App/Client/Routes';\n\nconst App = () => (\n    <Routes />\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'App/Client/index.css';\nimport App from 'App/Client/App';\nimport * as serviceWorker from 'App/Client/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}